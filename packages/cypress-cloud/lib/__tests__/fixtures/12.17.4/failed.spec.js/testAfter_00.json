{"async":false,"body":"function () {\n    expect(fail).to.be.true;\n  }","duration":585,"err":{"message":"fail is not defined","name":"ReferenceError","stack":"ReferenceError: fail is not defined\n    at Context.eval (webpack://web/./cypress/e2e/failed.spec.js:3:11)","parsedStack":[{"message":"ReferenceError: fail is not defined","whitespace":""},{"function":"Context.eval","fileUrl":"https://todomvc.com/__cypress/tests?p=cypress/e2e/failed.spec.js","originalFile":"webpack://web/./cypress/e2e/failed.spec.js","relativeFile":"cypress/e2e/failed.spec.js","absoluteFile":"/Users/agoldis/cypress-cloud/examples/webapp/cypress/e2e/failed.spec.js","line":3,"column":11,"whitespace":"    "}],"codeFrame":{"line":3,"column":12,"originalFile":"cypress/e2e/failed.spec.js","relativeFile":"examples/webapp/cypress/e2e/failed.spec.js","absoluteFile":"/Users/agoldis/cypress-cloud/examples/webapp/cypress/e2e/failed.spec.js","frame":"  1 | describe(\"Failed\", function () {\n  2 |   it(\"should fail\", function () {\n> 3 |     expect(fail).to.be.true;\n    |            ^\n  4 |   });\n  5 | });\n  6 | ","language":"js"}},"final":false,"hooks":[],"id":"r3","invocationDetails":{"function":"Suite.eval","fileUrl":"https://todomvc.com/__cypress/tests?p=cypress/e2e/failed.spec.js","originalFile":"webpack://web/./cypress/e2e/failed.spec.js","relativeFile":"cypress/e2e/failed.spec.js","absoluteFile":"/Users/agoldis/cypress-cloud/examples/webapp/cypress/e2e/failed.spec.js","line":2,"column":2,"whitespace":"    ","stack":"Error\n    at Suite.eval (https://todomvc.com/__cypress/tests?p=cypress/e2e/failed.spec.js:10:3)\n    at eval (https://todomvc.com/__cypress/tests?p=cypress/e2e/failed.spec.js:9:1)\n    at eval (https://todomvc.com/__cypress/tests?p=cypress/e2e/failed.spec.js:14:12)\n    at eval (<anonymous>)"},"order":1,"pending":false,"retries":0,"state":"failed","sync":true,"timedOut":false,"timings":{"lifecycle":28,"before each":[{"hookId":"h1","fnDuration":12,"afterFnDuration":0},{"hookId":"h2","fnDuration":318,"afterFnDuration":1}],"test":{"fnDuration":1,"afterFnDuration":224},"after each":[{"hookId":"h4","fnDuration":12,"afterFnDuration":0}]},"type":"test","wallClockStartedAt":"2023-09-18T23:38:39.005Z","title":"should fail","currentRetry":0,"fullTitle":"Failed should fail"}