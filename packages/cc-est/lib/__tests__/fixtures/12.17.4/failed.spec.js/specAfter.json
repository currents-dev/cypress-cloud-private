{"stats":{"suites":1,"tests":1,"passes":0,"pending":0,"skipped":0,"failures":1,"wallClockStartedAt":"2023-09-18T23:38:39.001Z","wallClockEndedAt":"2023-09-18T23:38:39.628Z","wallClockDuration":627},"reporter":"spec","reporterStats":{"suites":1,"tests":1,"passes":0,"pending":0,"failures":1,"start":"2023-09-18T23:38:39.002Z","end":"2023-09-18T23:38:39.631Z","duration":629},"hooks":[{"hookId":"h1","hookName":"before each","title":["\"before each\" hook"],"body":"() => {\n  const currentTest = cy.state(\"ctx\").currentTest;\n  if (currentTest) {\n    handleBefore(currentTest);\n  }\n}"},{"hookId":"h2","hookName":"before each","title":["\"before each\" hook"],"body":"function () {\n    cy.visit(\"/\");\n}"},{"hookId":"h4","hookName":"after each","title":["\"after each\" hook"],"body":"function () {\n      self.sendLogsToPrinter(self.collectorState.getCurrentLogStackIndex(), self.collectorState.getCurrentTest());\n    }"},{"hookId":"h5","hookName":"after each","title":["\"after each\" hook"],"body":"() => {\n  const currentTest = cy.state(\"ctx\").currentTest;\n  if (currentTest) {\n    handleAfter(currentTest);\n  }\n}"},{"hookId":"h3","hookName":"after all","title":["\"after all\" hook"],"body":"function () {\n      // Need to wait otherwise some last commands get omitted from logs.\n      cy.task(CONSTANTS.TASK_NAME_OUTPUT, null, {log: false});\n    }"}],"tests":[{"testId":"r3","title":["Failed","should fail"],"state":"failed","body":"function () {\n    expect(fail).to.be.true;\n  }","displayError":"ReferenceError: fail is not defined\n    at Context.eval (webpack://web/./cypress/e2e/failed.spec.js:3:11)","attempts":[{"state":"failed","error":{"name":"ReferenceError","message":"fail is not defined","stack":"    at Context.eval (webpack://web/./cypress/e2e/failed.spec.js:3:11)","codeFrame":{"line":3,"column":12,"originalFile":"cypress/e2e/failed.spec.js","relativeFile":"examples/webapp/cypress/e2e/failed.spec.js","absoluteFile":"/Users/agoldis/cypress-cloud/examples/webapp/cypress/e2e/failed.spec.js","frame":"  1 | describe(\"Failed\", function () {\n  2 |   it(\"should fail\", function () {\n> 3 |     expect(fail).to.be.true;\n    |            ^\n  4 |   });\n  5 | });\n  6 | ","language":"js"}},"timings":{"lifecycle":28,"before each":[{"hookId":"h1","fnDuration":12,"afterFnDuration":0},{"hookId":"h2","fnDuration":318,"afterFnDuration":1}],"test":{"fnDuration":1,"afterFnDuration":224},"after each":[{"hookId":"h4","fnDuration":12,"afterFnDuration":0},{"hookId":"h5","fnDuration":7,"afterFnDuration":0}],"after all":[{"hookId":"h3","fnDuration":3,"afterFnDuration":0}]},"failedFromHookId":null,"wallClockStartedAt":"2023-09-18T23:38:39.005Z","wallClockDuration":609,"videoTimestamp":2213}]}],"error":null,"video":"/Users/agoldis/cypress-cloud/examples/webapp/cypress/videos/failed.spec.js.mp4","screenshots":[{"screenshotId":"c68ku","name":null,"testId":"r3","testAttemptIndex":0,"takenAt":"2023-09-18T23:38:39.368Z","path":"/Users/agoldis/cypress-cloud/examples/webapp/cypress/screenshots/failed.spec.js/Failed -- should fail (failed).png","height":1440,"width":2560}],"spec":{"fileExtension":".js","baseName":"failed.spec.js","fileName":"failed","specFileExtension":".spec.js","relativeToCommonRoot":"failed.spec.js","specType":"integration","name":"cypress/e2e/failed.spec.js","relative":"cypress/e2e/failed.spec.js","absolute":"/Users/agoldis/cypress-cloud/examples/webapp/cypress/e2e/failed.spec.js"}}