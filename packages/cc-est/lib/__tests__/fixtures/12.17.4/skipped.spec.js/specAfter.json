{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 0,
    "pending": 0,
    "skipped": 1,
    "failures": 1,
    "wallClockStartedAt": "2023-09-18T23:38:42.405Z",
    "wallClockEndedAt": "2023-09-18T23:38:42.813Z",
    "wallClockDuration": 408
  },
  "reporter": "spec",
  "reporterStats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-09-18T23:38:42.406Z",
    "end": "2023-09-18T23:38:42.815Z",
    "duration": 409
  },
  "hooks": [
    {
      "hookId": "h1",
      "hookName": "before each",
      "title": ["\"before each\" hook"],
      "body": "() => {\n  const currentTest = cy.state(\"ctx\").currentTest;\n  if (currentTest) {\n    handleBefore(currentTest);\n  }\n}"
    },
    {
      "hookId": "h2",
      "hookName": "before each",
      "title": ["\"before each\" hook"],
      "body": "function () {\n    cy.visit(\"/\");\n}"
    },
    {
      "hookId": "h6",
      "hookName": "before each",
      "title": ["\"before each\" hook"],
      "body": "function () {\n    throw new Error(\"before each exception\");\n  }"
    },
    {
      "hookId": "h4",
      "hookName": "after each",
      "title": ["\"after each\" hook"],
      "body": "function () {\n      self.sendLogsToPrinter(self.collectorState.getCurrentLogStackIndex(), self.collectorState.getCurrentTest());\n    }"
    },
    {
      "hookId": "h5",
      "hookName": "after each",
      "title": ["\"after each\" hook"],
      "body": "() => {\n  const currentTest = cy.state(\"ctx\").currentTest;\n  if (currentTest) {\n    handleAfter(currentTest);\n  }\n}"
    },
    {
      "hookId": "h3",
      "hookName": "after all",
      "title": ["\"after all\" hook"],
      "body": "function () {\n      // Need to wait otherwise some last commands get omitted from logs.\n      cy.task(CONSTANTS.TASK_NAME_OUTPUT, null, {log: false});\n    }"
    }
  ],
  "tests": [
    {
      "testId": "r3",
      "title": ["Skipped", "should not be skipped"],
      "state": "failed",
      "body": "function () {\n    expect(true).to.be.true;\n  }",
      "displayError": "Error: before each exception\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Skipped`\n    at Context.eval (webpack://web/./cypress/e2e/skipped.spec.js:3:10)",
      "attempts": [
        {
          "state": "failed",
          "error": {
            "name": "Error",
            "message": "before each exception\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Skipped`",
            "stack": "    at Context.eval (webpack://web/./cypress/e2e/skipped.spec.js:3:10)",
            "codeFrame": {
              "line": 3,
              "column": 11,
              "originalFile": "cypress/e2e/skipped.spec.js",
              "relativeFile": "examples/webapp/cypress/e2e/skipped.spec.js",
              "absoluteFile": "/Users/agoldis/cypress-cloud/examples/webapp/cypress/e2e/skipped.spec.js",
              "frame": "  1 | describe(\"Skipped\", function () {\n  2 |   beforeEach(function () {\n> 3 |     throw new Error(\"before each exception\");\n    |           ^\n  4 |   });\n  5 |   it(\"should not be skipped\", function () {\n  6 |     expect(true).to.be.true;",
              "language": "js"
            }
          },
          "timings": {
            "lifecycle": 26,
            "before each": [
              { "hookId": "h1", "fnDuration": 5, "afterFnDuration": 0 },
              { "hookId": "h2", "fnDuration": 112, "afterFnDuration": 0 },
              { "hookId": "h6", "fnDuration": 1, "afterFnDuration": 192 }
            ],
            "after each": [
              { "hookId": "h4", "fnDuration": 13, "afterFnDuration": 0 },
              { "hookId": "h5", "fnDuration": 5, "afterFnDuration": 0 }
            ]
          },
          "failedFromHookId": "h6",
          "wallClockStartedAt": "2023-09-18T23:38:42.415Z",
          "wallClockDuration": 361,
          "videoTimestamp": 864
        }
      ]
    },
    {
      "testId": "r4",
      "title": ["Skipped", "should be skipped"],
      "state": "skipped",
      "body": "function () {\n    expect(true).to.be.true;\n  }",
      "displayError": null,
      "attempts": [
        {
          "state": "skipped",
          "error": null,
          "timings": null,
          "failedFromHookId": null,
          "wallClockStartedAt": "2023-09-18T23:38:42.790Z",
          "wallClockDuration": null,
          "videoTimestamp": 1239
        }
      ]
    }
  ],
  "error": null,
  "video": "/Users/agoldis/cypress-cloud/examples/webapp/cypress/videos/skipped.spec.js.mp4",
  "screenshots": [
    {
      "screenshotId": "vdaak",
      "name": null,
      "testId": "r3",
      "testAttemptIndex": 0,
      "takenAt": "2023-09-18T23:38:42.571Z",
      "path": "/Users/agoldis/cypress-cloud/examples/webapp/cypress/screenshots/skipped.spec.js/Skipped -- should not be skipped -- before each hook (failed).png",
      "height": 1440,
      "width": 2560
    }
  ],
  "spec": {
    "fileExtension": ".js",
    "baseName": "skipped.spec.js",
    "fileName": "skipped",
    "specFileExtension": ".spec.js",
    "relativeToCommonRoot": "skipped.spec.js",
    "specType": "integration",
    "name": "cypress/e2e/skipped.spec.js",
    "relative": "cypress/e2e/skipped.spec.js",
    "absolute": "/Users/agoldis/cypress-cloud/examples/webapp/cypress/e2e/skipped.spec.js"
  }
}
